import java.awt.Dimension;
import java.awt.Image;
import java.sql.Timestamp;
import java.util.*;
import java.io.*;
import java.sql.Timestamp;
import java.util.Date;
import java.net.URL;

import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

public class Images_From_Folder_Navigation extends javax.swing.JFrame {
    static int pos = 0; // the index of the images
    /**
     * Creates new form Images_From_Folder_Navigation
     */
    public Images_From_Folder_Navigation() {
        initComponents();
       // display first image
        showImage(pos);
    }
        
    public static int getPos() {
    	return pos;
    }
    
    public String[] getImages() // get images list
    {
        File file = new File(getClass().getResource("images").getFile()); // since class package and images folder are on same level we can use getClass().getResource()
        String[] imagesList = file.list();
        return imagesList;
        
//        URL url = getClass().getResource("images");
//        File directory = new File(url.getPath());
//        File[] files = directory.listFiles();
//        String[] imagesList = new String[0];
//        return imagesList;
    }

    public void showImage(int index) // display the image by index
    {
        String[] imagesList = getImages();
        String imageName = imagesList[index];
        //ImageIcon icon = new ImageIcon(getClass().getResource("images/") + imageName);
        ClassLoader cldr = this.getClass().getClassLoader(); 
        java.net.URL imageURL = cldr.getResource("images/" + imageName); 
        ImageIcon  icon = new ImageIcon(imageURL);
        
        Image image = icon.getImage().getScaledInstance(jLabel_Image.getWidth(), jLabel_Image.getHeight(), Image.SCALE_SMOOTH);
       
       jLabel_Image.setIcon(new ImageIcon(image));
        
    }
    
        /**
     * This method is called from within the constructor to initialize the form of the GUI.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
                           
    private void initComponents() {

        jLabel_Image = new javax.swing.JLabel();
        
        jButton1 = new javax.swing.JButton();
        jButton_Next = new javax.swing.JButton();
        jButton_Previous = new javax.swing.JButton();
        jButton_Last = new javax.swing.JButton();
        jButton_fileChoose = new javax.swing.JButton();
        
        jButton_fileChoose.setText("Choose File");
        jButton_fileChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	jButtonFileChooseActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        //jButton1.setIcon(new javax.swing.ImageIcon("/icons/first.png")); // NOI18N
        jButton1.setText("<<");
        jButton1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setIconTextGap(0);
        jButton1.setPreferredSize(new Dimension(40, 40));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton_Next.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        //jButton_Next.setIcon(new javax.swing.ImageIcon("/icons/prev.png")); // NOI18N
        jButton_Next.setText("<");
        jButton_Next.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jButton_Next.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_Next.setIconTextGap(0);
        jButton_Next.setPreferredSize(new Dimension(40, 40));
        jButton_Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_PreviousActionPerformed(evt);
            }
        });

        jButton_Previous.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        //jButton_Previous.setIcon(new javax.swing.ImageIcon("/icons/next.png")); // NOI18N
        jButton_Previous.setText(">");
        jButton_Previous.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jButton_Previous.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_Previous.setIconTextGap(0);
        jButton_Previous.setPreferredSize(new Dimension(40, 40));
        jButton_Previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_NextActionPerformed(evt);
            }
        });

        jButton_Last.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        //jButton_Last.setIcon(new javax.swing.ImageIcon("/icons/last.png")); // NOI18N
        jButton_Last.setText(">>");
        jButton_Last.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jButton_Last.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_Last.setIconTextGap(0);
        jButton_Last.setPreferredSize(new Dimension(40, 40));
        jButton_Last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel_Image, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(jButton_Next, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jButton_Previous, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jButton_Last, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jButton_fileChoose, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel_Image, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_Next, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(jButton_Previous, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(jButton_Last, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(jButton_fileChoose, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
                
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>  
    
    
 // File choose
    private void jButtonFileChooseActionPerformed(java.awt.event.ActionEvent evt) {                                         
        
    	JFileChooser fileChooser = new JFileChooser();
    	fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
    	int result = fileChooser.showOpenDialog(jLabel_Image);
    	if (result == JFileChooser.APPROVE_OPTION) {
    	    File selectedFile = fileChooser.getSelectedFile();
    	    
    	    fullPathName=selectedFile.getAbsolutePath();
    	    pathname=selectedFile.getParent();
    	    filename=selectedFile.getName();
    	    
    	    System.out.println("Selected file: " + selectedFile.getAbsolutePath()+ "\nfile name: " + selectedFile.getName());
    	}
        
    }  

    // First
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        
        pos = 0;
        showImage(pos);
        
    }                                        

     // Next
    private void jButton_NextActionPerformed(java.awt.event.ActionEvent evt) {                                             
       pos = pos + 1;
       if(pos >= getImages().length)
       {
           pos  = getImages().length - 1;
       }
       showImage(pos);
    }                                            

     // Previous
    private void jButton_PreviousActionPerformed(java.awt.event.ActionEvent evt) {                                                 
       pos = pos - 1;
       if(pos < 0)
       {
           pos = 0;
       }
       showImage(pos);
    }                                                

     // Last
    private void jButton_LastActionPerformed(java.awt.event.ActionEvent evt) {                                             
       pos = getImages().length - 1;
       showImage(pos);
    }                                            

    /**
     * @param args the command line arguments
     * @throws IOException 
     */
    public static void main(String args[]) throws IOException {
    	
    	java.util.Date date = new java.util.Date(); // Instantiate Date object
    	
    	//file chooser, pick the ev3 file, save the file location, file name 	
    	
    	//TimerTask task1 = new FileWatcher(new File("E:\\eclipse-jee-mars-2-win32-x86_64\\workspace\\Robin\\lubold1.ev3" )) // Monitor the Module 1 file
    	
    	JFileChooser fileChooser = new JFileChooser();
    	fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
    	int result = fileChooser.showOpenDialog(jLabel_Image);
    	if (result == JFileChooser.APPROVE_OPTION) {
    	    File selectedFile = fileChooser.getSelectedFile();
    	    
    	    fullPathName=selectedFile.getAbsolutePath();
    	    pathname=selectedFile.getParent();
    	    filename=selectedFile.getName();
    	    
    	    
    	    System.out.println("Selected file: " + selectedFile.getParent()+ "\nfile name: " + selectedFile.getName());
    	}
    	
    	TimerTask task1 = new FileWatcher(new File(fullPathName)) // Monitor the Module 1 file
    			
        {
          protected void onChange(File file) // Code to be performed on file change 
          {
        	  System.out.println("File " + file.getName() + " has changed at time " + new Timestamp(date.getTime())); 
        	  
        	  String zipFilePath = fullPathName;
              String destDirectory = pathname;
              UnzipUtility unzipper = new UnzipUtility();
              
              try 
              {
            	  unzipper.unzip(zipFilePath, destDirectory);
                  //DomParserDemo domParser = new DomParserDemo();
                  String inputFile = pathname+"\\Program.ev3p";
                  DomParserDemo.parse(inputFile, getPos()+1); // Parse the file according to Module 1 production rules
                  
              } 
              catch (Exception ex) 
              {
                  ex.printStackTrace();
              } 
          } // End of onChange method
        }; // End of Task 1
        
        Timer timer = new Timer();
        timer.schedule(task1, new Date(), 1000); // Repeat check every second
    	
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Images_From_Folder_Navigation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Images_From_Folder_Navigation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Images_From_Folder_Navigation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Images_From_Folder_Navigation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            	new Images_From_Folder_Navigation().setVisible(true); 
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton_Last;
    private javax.swing.JButton jButton_Next;
    private javax.swing.JButton jButton_Previous;
    private javax.swing.JButton jButton_fileChoose;
    private static javax.swing.JLabel jLabel_Image;
    
    static String pathname;
    static String filename;
    static String fullPathName;
    // End of variables declaration
}